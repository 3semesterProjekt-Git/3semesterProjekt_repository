ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"triggerPWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.triggerPWM_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	triggerPWM_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	triggerPWM_Enable, %function
  25              	triggerPWM_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\triggerPWM.c"
   1:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/triggerPWM.c **** * File Name: triggerPWM.c
   3:Generated_Source\PSoC5/triggerPWM.c **** * Version 3.30
   4:Generated_Source\PSoC5/triggerPWM.c **** *
   5:Generated_Source\PSoC5/triggerPWM.c **** * Description:
   6:Generated_Source\PSoC5/triggerPWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/triggerPWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/triggerPWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/triggerPWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/triggerPWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/triggerPWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/triggerPWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/triggerPWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/triggerPWM.c **** *
  15:Generated_Source\PSoC5/triggerPWM.c **** * Note:
  16:Generated_Source\PSoC5/triggerPWM.c **** *
  17:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************
  18:Generated_Source\PSoC5/triggerPWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/triggerPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/triggerPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/triggerPWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/triggerPWM.c **** 
  24:Generated_Source\PSoC5/triggerPWM.c **** #include "triggerPWM.h"
  25:Generated_Source\PSoC5/triggerPWM.c **** 
  26:Generated_Source\PSoC5/triggerPWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/triggerPWM.c **** #ifdef triggerPWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/triggerPWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/triggerPWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/triggerPWM.c **** #endif /* triggerPWM_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 2


  31:Generated_Source\PSoC5/triggerPWM.c **** 
  32:Generated_Source\PSoC5/triggerPWM.c **** uint8 triggerPWM_initVar = 0u;
  33:Generated_Source\PSoC5/triggerPWM.c **** 
  34:Generated_Source\PSoC5/triggerPWM.c **** 
  35:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_Start
  37:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
  38:Generated_Source\PSoC5/triggerPWM.c **** *
  39:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
  40:Generated_Source\PSoC5/triggerPWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/triggerPWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/triggerPWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/triggerPWM.c **** *
  44:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
  45:Generated_Source\PSoC5/triggerPWM.c **** *  None
  46:Generated_Source\PSoC5/triggerPWM.c **** *
  47:Generated_Source\PSoC5/triggerPWM.c **** * Return:
  48:Generated_Source\PSoC5/triggerPWM.c **** *  None
  49:Generated_Source\PSoC5/triggerPWM.c **** *
  50:Generated_Source\PSoC5/triggerPWM.c **** * Global variables:
  51:Generated_Source\PSoC5/triggerPWM.c **** *  triggerPWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/triggerPWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/triggerPWM.c **** *
  54:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/triggerPWM.c **** void triggerPWM_Start(void) 
  56:Generated_Source\PSoC5/triggerPWM.c **** {
  57:Generated_Source\PSoC5/triggerPWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/triggerPWM.c ****     if(triggerPWM_initVar == 0u)
  59:Generated_Source\PSoC5/triggerPWM.c ****     {
  60:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_Init();
  61:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_initVar = 1u;
  62:Generated_Source\PSoC5/triggerPWM.c ****     }
  63:Generated_Source\PSoC5/triggerPWM.c ****     triggerPWM_Enable();
  64:Generated_Source\PSoC5/triggerPWM.c **** 
  65:Generated_Source\PSoC5/triggerPWM.c **** }
  66:Generated_Source\PSoC5/triggerPWM.c **** 
  67:Generated_Source\PSoC5/triggerPWM.c **** 
  68:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_Init
  70:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
  71:Generated_Source\PSoC5/triggerPWM.c **** *
  72:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
  73:Generated_Source\PSoC5/triggerPWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/triggerPWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/triggerPWM.c **** *  triggerPWM_Start().
  76:Generated_Source\PSoC5/triggerPWM.c **** *
  77:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
  78:Generated_Source\PSoC5/triggerPWM.c **** *  None
  79:Generated_Source\PSoC5/triggerPWM.c **** *
  80:Generated_Source\PSoC5/triggerPWM.c **** * Return:
  81:Generated_Source\PSoC5/triggerPWM.c **** *  None
  82:Generated_Source\PSoC5/triggerPWM.c **** *
  83:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/triggerPWM.c **** void triggerPWM_Init(void) 
  85:Generated_Source\PSoC5/triggerPWM.c **** {
  86:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction || triggerPWM_UseControl)
  87:Generated_Source\PSoC5/triggerPWM.c ****         uint8 ctrl;
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 3


  88:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction || triggerPWM_UseControl) */
  89:Generated_Source\PSoC5/triggerPWM.c **** 
  90:Generated_Source\PSoC5/triggerPWM.c ****     #if(!triggerPWM_UsingFixedFunction)
  91:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UseStatus)
  92:Generated_Source\PSoC5/triggerPWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/triggerPWM.c ****             uint8 triggerPWM_interruptState;
  94:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UseStatus) */
  95:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (!triggerPWM_UsingFixedFunction) */
  96:Generated_Source\PSoC5/triggerPWM.c **** 
  97:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction)
  98:Generated_Source\PSoC5/triggerPWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL |= triggerPWM_CFG0_MODE;
 100:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_DeadBand2_4)
 101:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_CONTROL |= triggerPWM_CFG0_DB;
 102:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_DeadBand2_4) */
 103:Generated_Source\PSoC5/triggerPWM.c **** 
 104:Generated_Source\PSoC5/triggerPWM.c ****         ctrl = triggerPWM_CONTROL3 & ((uint8 )(~triggerPWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL3 = ctrl | triggerPWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/triggerPWM.c **** 
 107:Generated_Source\PSoC5/triggerPWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_RT1 &= ((uint8)(~triggerPWM_RT1_MASK));
 109:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_RT1 |= triggerPWM_SYNC;
 110:Generated_Source\PSoC5/triggerPWM.c **** 
 111:Generated_Source\PSoC5/triggerPWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_RT1 &= ((uint8)(~triggerPWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_RT1 |= triggerPWM_SYNCDSI_EN;
 114:Generated_Source\PSoC5/triggerPWM.c **** 
 115:Generated_Source\PSoC5/triggerPWM.c ****     #elif (triggerPWM_UseControl)
 116:Generated_Source\PSoC5/triggerPWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/triggerPWM.c ****         ctrl = triggerPWM_CONTROL & ((uint8)(~triggerPWM_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/triggerPWM.c ****                 ((uint8)(~triggerPWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL = ctrl | triggerPWM_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/triggerPWM.c ****                                    triggerPWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 122:Generated_Source\PSoC5/triggerPWM.c **** 
 123:Generated_Source\PSoC5/triggerPWM.c ****     #if (!triggerPWM_UsingFixedFunction)
 124:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_Resolution == 8)
 125:Generated_Source\PSoC5/triggerPWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_AUX_CONTROLDP0 |= (triggerPWM_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/triggerPWM.c ****         #else /* (triggerPWM_Resolution == 16)*/
 128:Generated_Source\PSoC5/triggerPWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_AUX_CONTROLDP0 |= (triggerPWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_AUX_CONTROLDP1 |= (triggerPWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_Resolution == 8) */
 132:Generated_Source\PSoC5/triggerPWM.c **** 
 133:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_WriteCounter(triggerPWM_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (!triggerPWM_UsingFixedFunction) */
 135:Generated_Source\PSoC5/triggerPWM.c **** 
 136:Generated_Source\PSoC5/triggerPWM.c ****     triggerPWM_WritePeriod(triggerPWM_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/triggerPWM.c **** 
 138:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_UseOneCompareMode)
 139:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_WriteCompare(triggerPWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/triggerPWM.c ****         #else
 141:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_WriteCompare1(triggerPWM_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_WriteCompare2(triggerPWM_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UseOneCompareMode) */
 144:Generated_Source\PSoC5/triggerPWM.c **** 
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 4


 145:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_KillModeMinTime)
 146:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_WriteKillTime(triggerPWM_MinimumKillTime);
 147:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_KillModeMinTime) */
 148:Generated_Source\PSoC5/triggerPWM.c **** 
 149:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_DeadBandUsed)
 150:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_WriteDeadTime(triggerPWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_DeadBandUsed) */
 152:Generated_Source\PSoC5/triggerPWM.c **** 
 153:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UseStatus || triggerPWM_UsingFixedFunction)
 154:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_SetInterruptMode(triggerPWM_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UseStatus || triggerPWM_UsingFixedFunction) */
 156:Generated_Source\PSoC5/triggerPWM.c **** 
 157:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction)
 158:Generated_Source\PSoC5/triggerPWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_GLOBAL_ENABLE |= triggerPWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/triggerPWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL2 |= triggerPWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/triggerPWM.c ****     #else
 163:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UseStatus)
 164:Generated_Source\PSoC5/triggerPWM.c **** 
 165:Generated_Source\PSoC5/triggerPWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/triggerPWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/triggerPWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_STATUS_AUX_CTRL |= triggerPWM_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/triggerPWM.c **** 
 171:Generated_Source\PSoC5/triggerPWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/triggerPWM.c ****             CyExitCriticalSection(triggerPWM_interruptState);
 173:Generated_Source\PSoC5/triggerPWM.c **** 
 174:Generated_Source\PSoC5/triggerPWM.c ****             /* Clear the FIFO to enable the triggerPWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/triggerPWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_ClearFIFO();
 177:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UseStatus) */
 178:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 179:Generated_Source\PSoC5/triggerPWM.c **** }
 180:Generated_Source\PSoC5/triggerPWM.c **** 
 181:Generated_Source\PSoC5/triggerPWM.c **** 
 182:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_Enable
 184:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
 185:Generated_Source\PSoC5/triggerPWM.c **** *
 186:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
 187:Generated_Source\PSoC5/triggerPWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/triggerPWM.c **** *
 189:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
 190:Generated_Source\PSoC5/triggerPWM.c **** *  None
 191:Generated_Source\PSoC5/triggerPWM.c **** *
 192:Generated_Source\PSoC5/triggerPWM.c **** * Return:
 193:Generated_Source\PSoC5/triggerPWM.c **** *  None
 194:Generated_Source\PSoC5/triggerPWM.c **** *
 195:Generated_Source\PSoC5/triggerPWM.c **** * Side Effects:
 196:Generated_Source\PSoC5/triggerPWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/triggerPWM.c **** *
 198:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/triggerPWM.c **** void triggerPWM_Enable(void) 
 200:Generated_Source\PSoC5/triggerPWM.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/triggerPWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction)
 203:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_GLOBAL_ENABLE |= triggerPWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_GLOBAL_STBY_ENABLE |= triggerPWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 206:Generated_Source\PSoC5/triggerPWM.c **** 
 207:Generated_Source\PSoC5/triggerPWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UseControl || triggerPWM_UsingFixedFunction)
 209:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL |= triggerPWM_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7D640040 		.word	1073767549
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	triggerPWM_Enable, .-triggerPWM_Enable
  46              		.section	.text.triggerPWM_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	triggerPWM_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	triggerPWM_Stop, %function
  52              	triggerPWM_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UseControl || triggerPWM_UsingFixedFunction) */
 211:Generated_Source\PSoC5/triggerPWM.c **** }
 212:Generated_Source\PSoC5/triggerPWM.c **** 
 213:Generated_Source\PSoC5/triggerPWM.c **** 
 214:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_Stop
 216:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
 217:Generated_Source\PSoC5/triggerPWM.c **** *
 218:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
 219:Generated_Source\PSoC5/triggerPWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/triggerPWM.c **** *  interrupts.
 221:Generated_Source\PSoC5/triggerPWM.c **** *
 222:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
 223:Generated_Source\PSoC5/triggerPWM.c **** *  None
 224:Generated_Source\PSoC5/triggerPWM.c **** *
 225:Generated_Source\PSoC5/triggerPWM.c **** * Return:
 226:Generated_Source\PSoC5/triggerPWM.c **** *  None
 227:Generated_Source\PSoC5/triggerPWM.c **** *
 228:Generated_Source\PSoC5/triggerPWM.c **** * Side Effects:
 229:Generated_Source\PSoC5/triggerPWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/triggerPWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/triggerPWM.c **** *
 232:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 6


 233:Generated_Source\PSoC5/triggerPWM.c **** void triggerPWM_Stop(void) 
 234:Generated_Source\PSoC5/triggerPWM.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UseControl || triggerPWM_UsingFixedFunction)
 236:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_CONTROL &= ((uint8)(~triggerPWM_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7D640040 		.word	1073767549
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	triggerPWM_Stop, .-triggerPWM_Stop
  72              		.section	.text.triggerPWM_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	triggerPWM_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	triggerPWM_WriteCounter, %function
  78              	triggerPWM_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UseControl || triggerPWM_UsingFixedFunction) */
 238:Generated_Source\PSoC5/triggerPWM.c **** 
 239:Generated_Source\PSoC5/triggerPWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction)
 241:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_GLOBAL_ENABLE &= ((uint8)(~triggerPWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_GLOBAL_STBY_ENABLE &= ((uint8)(~triggerPWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 244:Generated_Source\PSoC5/triggerPWM.c **** }
 245:Generated_Source\PSoC5/triggerPWM.c **** 
 246:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_UseOneCompareMode)
 247:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_CompareMode1SW)
 248:Generated_Source\PSoC5/triggerPWM.c **** 
 249:Generated_Source\PSoC5/triggerPWM.c **** 
 250:Generated_Source\PSoC5/triggerPWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/triggerPWM.c ****         * Function Name: triggerPWM_SetCompareMode
 252:Generated_Source\PSoC5/triggerPWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/triggerPWM.c ****         *
 254:Generated_Source\PSoC5/triggerPWM.c ****         * Summary:
 255:Generated_Source\PSoC5/triggerPWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/triggerPWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/triggerPWM.c ****         *
 258:Generated_Source\PSoC5/triggerPWM.c ****         * Parameters:
 259:Generated_Source\PSoC5/triggerPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/triggerPWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/triggerPWM.c ****         *
 262:Generated_Source\PSoC5/triggerPWM.c ****         * Return:
 263:Generated_Source\PSoC5/triggerPWM.c ****         *  None
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 7


 264:Generated_Source\PSoC5/triggerPWM.c ****         *
 265:Generated_Source\PSoC5/triggerPWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/triggerPWM.c ****         void triggerPWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/triggerPWM.c ****         {
 268:Generated_Source\PSoC5/triggerPWM.c ****             #if(triggerPWM_UsingFixedFunction)
 269:Generated_Source\PSoC5/triggerPWM.c **** 
 270:Generated_Source\PSoC5/triggerPWM.c ****                 #if(0 != triggerPWM_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << triggerPWM_CTRL_CMPMOD
 272:Generated_Source\PSoC5/triggerPWM.c ****                 #else
 273:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/triggerPWM.c ****                 #endif /* (0 != triggerPWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/triggerPWM.c **** 
 276:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL3 &= ((uint8)(~triggerPWM_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/triggerPWM.c **** 
 279:Generated_Source\PSoC5/triggerPWM.c ****             #elif (triggerPWM_UseControl)
 280:Generated_Source\PSoC5/triggerPWM.c **** 
 281:Generated_Source\PSoC5/triggerPWM.c ****                 #if(0 != triggerPWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << triggerPWM_CTRL_CMPMO
 283:Generated_Source\PSoC5/triggerPWM.c ****                                                 triggerPWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/triggerPWM.c ****                 #else
 285:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemode1masked = comparemode & triggerPWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/triggerPWM.c ****                 #endif /* (0 != triggerPWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/triggerPWM.c **** 
 288:Generated_Source\PSoC5/triggerPWM.c ****                 #if(0 != triggerPWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << triggerPWM_CTRL_CMPMO
 290:Generated_Source\PSoC5/triggerPWM.c ****                                                triggerPWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/triggerPWM.c ****                 #else
 292:Generated_Source\PSoC5/triggerPWM.c ****                     uint8 comparemode2masked = comparemode & triggerPWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/triggerPWM.c ****                 #endif /* (0 != triggerPWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/triggerPWM.c **** 
 295:Generated_Source\PSoC5/triggerPWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL &= ((uint8)(~(triggerPWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/triggerPWM.c ****                                             triggerPWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/triggerPWM.c **** 
 300:Generated_Source\PSoC5/triggerPWM.c ****             #else
 301:Generated_Source\PSoC5/triggerPWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (triggerPWM_UsingFixedFunction) */
 303:Generated_Source\PSoC5/triggerPWM.c ****         }
 304:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* triggerPWM_CompareMode1SW */
 305:Generated_Source\PSoC5/triggerPWM.c **** 
 306:Generated_Source\PSoC5/triggerPWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/triggerPWM.c **** 
 308:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_CompareMode1SW)
 309:Generated_Source\PSoC5/triggerPWM.c **** 
 310:Generated_Source\PSoC5/triggerPWM.c **** 
 311:Generated_Source\PSoC5/triggerPWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/triggerPWM.c ****         * Function Name: triggerPWM_SetCompareMode1
 313:Generated_Source\PSoC5/triggerPWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/triggerPWM.c ****         *
 315:Generated_Source\PSoC5/triggerPWM.c ****         * Summary:
 316:Generated_Source\PSoC5/triggerPWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/triggerPWM.c ****         *
 318:Generated_Source\PSoC5/triggerPWM.c ****         * Parameters:
 319:Generated_Source\PSoC5/triggerPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/triggerPWM.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 8


 321:Generated_Source\PSoC5/triggerPWM.c ****         *
 322:Generated_Source\PSoC5/triggerPWM.c ****         * Return:
 323:Generated_Source\PSoC5/triggerPWM.c ****         *  None
 324:Generated_Source\PSoC5/triggerPWM.c ****         *
 325:Generated_Source\PSoC5/triggerPWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/triggerPWM.c ****         void triggerPWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/triggerPWM.c ****         {
 328:Generated_Source\PSoC5/triggerPWM.c ****             #if(0 != triggerPWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/triggerPWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << triggerPWM_CTRL_CMPMODE1_S
 330:Generated_Source\PSoC5/triggerPWM.c ****                                            triggerPWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/triggerPWM.c ****             #else
 332:Generated_Source\PSoC5/triggerPWM.c ****                 uint8 comparemodemasked = comparemode & triggerPWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (0 != triggerPWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/triggerPWM.c **** 
 335:Generated_Source\PSoC5/triggerPWM.c ****             #if (triggerPWM_UseControl)
 336:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL &= ((uint8)(~triggerPWM_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (triggerPWM_UseControl) */
 339:Generated_Source\PSoC5/triggerPWM.c ****         }
 340:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* triggerPWM_CompareMode1SW */
 341:Generated_Source\PSoC5/triggerPWM.c **** 
 342:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_CompareMode2SW)
 343:Generated_Source\PSoC5/triggerPWM.c **** 
 344:Generated_Source\PSoC5/triggerPWM.c **** 
 345:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_SetCompareMode2
 347:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/triggerPWM.c ****     *
 349:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 350:Generated_Source\PSoC5/triggerPWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/triggerPWM.c ****     *
 352:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 353:Generated_Source\PSoC5/triggerPWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/triggerPWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/triggerPWM.c ****     *
 356:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 357:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 358:Generated_Source\PSoC5/triggerPWM.c ****     *
 359:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/triggerPWM.c ****     {
 362:Generated_Source\PSoC5/triggerPWM.c **** 
 363:Generated_Source\PSoC5/triggerPWM.c ****         #if(0 != triggerPWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/triggerPWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << triggerPWM_CTRL_CMPMODE2_SHIFT
 365:Generated_Source\PSoC5/triggerPWM.c ****                                                  triggerPWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/triggerPWM.c ****         #else
 367:Generated_Source\PSoC5/triggerPWM.c ****             uint8 comparemodemasked = comparemode & triggerPWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (0 != triggerPWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/triggerPWM.c **** 
 370:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_UseControl)
 371:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_CONTROL &= ((uint8)(~triggerPWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UseControl) */
 374:Generated_Source\PSoC5/triggerPWM.c ****     }
 375:Generated_Source\PSoC5/triggerPWM.c ****     #endif /*triggerPWM_CompareMode2SW */
 376:Generated_Source\PSoC5/triggerPWM.c **** 
 377:Generated_Source\PSoC5/triggerPWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 9


 378:Generated_Source\PSoC5/triggerPWM.c **** 
 379:Generated_Source\PSoC5/triggerPWM.c **** 
 380:Generated_Source\PSoC5/triggerPWM.c **** #if (!triggerPWM_UsingFixedFunction)
 381:Generated_Source\PSoC5/triggerPWM.c **** 
 382:Generated_Source\PSoC5/triggerPWM.c **** 
 383:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteCounter
 385:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/triggerPWM.c ****     *
 387:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 388:Generated_Source\PSoC5/triggerPWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/triggerPWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/triggerPWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/triggerPWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/triggerPWM.c ****     *
 393:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 394:Generated_Source\PSoC5/triggerPWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/triggerPWM.c ****     *
 396:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 397:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 398:Generated_Source\PSoC5/triggerPWM.c ****     *
 399:Generated_Source\PSoC5/triggerPWM.c ****     * Side Effects:
 400:Generated_Source\PSoC5/triggerPWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/triggerPWM.c ****     *
 402:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/triggerPWM.c ****                                        
 405:Generated_Source\PSoC5/triggerPWM.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/triggerPWM.c ****         CY_SET_REG16(triggerPWM_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 18680040 		.word	1073768472
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	triggerPWM_WriteCounter, .-triggerPWM_WriteCounter
  97              		.section	.text.triggerPWM_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	triggerPWM_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	triggerPWM_ReadCounter, %function
 103              	triggerPWM_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/triggerPWM.c ****     }
 408:Generated_Source\PSoC5/triggerPWM.c **** 
 409:Generated_Source\PSoC5/triggerPWM.c **** 
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 10


 410:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadCounter
 412:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/triggerPWM.c ****     *
 414:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 415:Generated_Source\PSoC5/triggerPWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/triggerPWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/triggerPWM.c ****     *
 418:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 419:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 420:Generated_Source\PSoC5/triggerPWM.c ****     *
 421:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 422:Generated_Source\PSoC5/triggerPWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/triggerPWM.c ****     *
 424:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/triggerPWM.c ****     uint16 triggerPWM_ReadCounter(void) 
 426:Generated_Source\PSoC5/triggerPWM.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/triggerPWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/triggerPWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/triggerPWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/triggerPWM.c ****           (void)CY_GET_REG8(triggerPWM_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/triggerPWM.c **** 
 432:Generated_Source\PSoC5/triggerPWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG16(triggerPWM_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/triggerPWM.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 1C640040 		.word	1073767452
 123 0010 B8680040 		.word	1073768632
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	triggerPWM_ReadCounter, .-triggerPWM_ReadCounter
 127              		.section	.text.triggerPWM_WritePeriod,"ax",%progbits
 128              		.align	2
 129              		.global	triggerPWM_WritePeriod
 130              		.thumb
 131              		.thumb_func
 132              		.type	triggerPWM_WritePeriod, %function
 133              	triggerPWM_WritePeriod:
 134              	.LFB6:
 435:Generated_Source\PSoC5/triggerPWM.c **** 
 436:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UseStatus)
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 11


 437:Generated_Source\PSoC5/triggerPWM.c **** 
 438:Generated_Source\PSoC5/triggerPWM.c **** 
 439:Generated_Source\PSoC5/triggerPWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/triggerPWM.c ****         * Function Name: triggerPWM_ClearFIFO
 441:Generated_Source\PSoC5/triggerPWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/triggerPWM.c ****         *
 443:Generated_Source\PSoC5/triggerPWM.c ****         * Summary:
 444:Generated_Source\PSoC5/triggerPWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/triggerPWM.c ****         *
 446:Generated_Source\PSoC5/triggerPWM.c ****         * Parameters:
 447:Generated_Source\PSoC5/triggerPWM.c ****         *  None
 448:Generated_Source\PSoC5/triggerPWM.c ****         *
 449:Generated_Source\PSoC5/triggerPWM.c ****         * Return:
 450:Generated_Source\PSoC5/triggerPWM.c ****         *  None
 451:Generated_Source\PSoC5/triggerPWM.c ****         *
 452:Generated_Source\PSoC5/triggerPWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/triggerPWM.c ****         void triggerPWM_ClearFIFO(void) 
 454:Generated_Source\PSoC5/triggerPWM.c ****         {
 455:Generated_Source\PSoC5/triggerPWM.c ****             while(0u != (triggerPWM_ReadStatusRegister() & triggerPWM_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/triggerPWM.c ****             {
 457:Generated_Source\PSoC5/triggerPWM.c ****                 (void)triggerPWM_ReadCapture();
 458:Generated_Source\PSoC5/triggerPWM.c ****             }
 459:Generated_Source\PSoC5/triggerPWM.c ****         }
 460:Generated_Source\PSoC5/triggerPWM.c **** 
 461:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* triggerPWM_UseStatus */
 462:Generated_Source\PSoC5/triggerPWM.c **** 
 463:Generated_Source\PSoC5/triggerPWM.c **** #endif /* !triggerPWM_UsingFixedFunction */
 464:Generated_Source\PSoC5/triggerPWM.c **** 
 465:Generated_Source\PSoC5/triggerPWM.c **** 
 466:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_WritePeriod
 468:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
 469:Generated_Source\PSoC5/triggerPWM.c **** *
 470:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
 471:Generated_Source\PSoC5/triggerPWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/triggerPWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/triggerPWM.c **** *
 474:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
 475:Generated_Source\PSoC5/triggerPWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/triggerPWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/triggerPWM.c **** *
 478:Generated_Source\PSoC5/triggerPWM.c **** * Return:
 479:Generated_Source\PSoC5/triggerPWM.c **** *  None
 480:Generated_Source\PSoC5/triggerPWM.c **** *
 481:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/triggerPWM.c **** void triggerPWM_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/triggerPWM.c **** {
 135              		.loc 1 483 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL1:
 484:Generated_Source\PSoC5/triggerPWM.c ****     #if(triggerPWM_UsingFixedFunction)
 485:Generated_Source\PSoC5/triggerPWM.c ****         CY_SET_REG16(triggerPWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/triggerPWM.c ****     #else
 487:Generated_Source\PSoC5/triggerPWM.c ****         CY_SET_REG16(triggerPWM_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 12


 141              		.loc 1 487 0
 142 0000 014B     		ldr	r3, .L14
 143 0002 1880     		strh	r0, [r3]	@ movhi
 144 0004 7047     		bx	lr
 145              	.L15:
 146 0006 00BF     		.align	2
 147              	.L14:
 148 0008 98680040 		.word	1073768600
 149              		.cfi_endproc
 150              	.LFE6:
 151              		.size	triggerPWM_WritePeriod, .-triggerPWM_WritePeriod
 152              		.section	.text.triggerPWM_WriteCompare,"ax",%progbits
 153              		.align	2
 154              		.global	triggerPWM_WriteCompare
 155              		.thumb
 156              		.thumb_func
 157              		.type	triggerPWM_WriteCompare, %function
 158              	triggerPWM_WriteCompare:
 159              	.LFB7:
 488:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 489:Generated_Source\PSoC5/triggerPWM.c **** }
 490:Generated_Source\PSoC5/triggerPWM.c **** 
 491:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_UseOneCompareMode)
 492:Generated_Source\PSoC5/triggerPWM.c **** 
 493:Generated_Source\PSoC5/triggerPWM.c **** 
 494:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteCompare
 496:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/triggerPWM.c ****     *
 498:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 499:Generated_Source\PSoC5/triggerPWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/triggerPWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/triggerPWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/triggerPWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/triggerPWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/triggerPWM.c ****     *
 505:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 506:Generated_Source\PSoC5/triggerPWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/triggerPWM.c ****     *
 508:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 509:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 510:Generated_Source\PSoC5/triggerPWM.c ****     *
 511:Generated_Source\PSoC5/triggerPWM.c ****     * Side Effects:
 512:Generated_Source\PSoC5/triggerPWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/triggerPWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/triggerPWM.c ****     *
 515:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/triggerPWM.c ****                                        
 518:Generated_Source\PSoC5/triggerPWM.c ****     {
 160              		.loc 1 518 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL2:
 519:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UsingFixedFunction)
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 13


 520:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/triggerPWM.c ****         #else
 522:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE1_LSB_PTR, compare);
 166              		.loc 1 522 0
 167 0000 014B     		ldr	r3, .L17
 168 0002 1880     		strh	r0, [r3]	@ movhi
 169 0004 7047     		bx	lr
 170              	.L18:
 171 0006 00BF     		.align	2
 172              	.L17:
 173 0008 58680040 		.word	1073768536
 174              		.cfi_endproc
 175              	.LFE7:
 176              		.size	triggerPWM_WriteCompare, .-triggerPWM_WriteCompare
 177              		.section	.text.triggerPWM_Init,"ax",%progbits
 178              		.align	2
 179              		.global	triggerPWM_Init
 180              		.thumb
 181              		.thumb_func
 182              		.type	triggerPWM_Init, %function
 183              	triggerPWM_Init:
 184              	.LFB1:
  85:Generated_Source\PSoC5/triggerPWM.c ****     #if (triggerPWM_UsingFixedFunction || triggerPWM_UseControl)
 185              		.loc 1 85 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/triggerPWM.c ****                 ((uint8)(~triggerPWM_CTRL_CMPMODE1_MASK));
 193              		.loc 1 117 0
 194 0002 0E4A     		ldr	r2, .L21
 195 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 0006 03F0C003 		and	r3, r3, #192
 197              	.LVL3:
 119:Generated_Source\PSoC5/triggerPWM.c ****                                    triggerPWM_DEFAULT_COMPARE1_MODE;
 198              		.loc 1 119 0
 199 000a 43F00903 		orr	r3, r3, #9
 200              	.LVL4:
 201 000e 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_AUX_CONTROLDP1 |= (triggerPWM_AUX_CTRL_FIFO0_CLR);
 202              		.loc 1 129 0
 203 0010 1F32     		adds	r2, r2, #31
 204 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 205 0014 43F00103 		orr	r3, r3, #1
 206 0018 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_Resolution == 8) */
 207              		.loc 1 130 0
 208 001a 0132     		adds	r2, r2, #1
 209 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 210 001e 43F00103 		orr	r3, r3, #1
 211 0022 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (!triggerPWM_UsingFixedFunction) */
 212              		.loc 1 133 0
 213 0024 48F23520 		movw	r0, #33333
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 14


 214 0028 FFF7FEFF 		bl	triggerPWM_WriteCounter
 215              	.LVL5:
 136:Generated_Source\PSoC5/triggerPWM.c **** 
 216              		.loc 1 136 0
 217 002c 48F23520 		movw	r0, #33333
 218 0030 FFF7FEFF 		bl	triggerPWM_WritePeriod
 219              	.LVL6:
 139:Generated_Source\PSoC5/triggerPWM.c ****         #else
 220              		.loc 1 139 0
 221 0034 0520     		movs	r0, #5
 222 0036 FFF7FEFF 		bl	triggerPWM_WriteCompare
 223              	.LVL7:
 224 003a 08BD     		pop	{r3, pc}
 225              	.L22:
 226              		.align	2
 227              	.L21:
 228 003c 7D640040 		.word	1073767549
 229              		.cfi_endproc
 230              	.LFE1:
 231              		.size	triggerPWM_Init, .-triggerPWM_Init
 232              		.section	.text.triggerPWM_Start,"ax",%progbits
 233              		.align	2
 234              		.global	triggerPWM_Start
 235              		.thumb
 236              		.thumb_func
 237              		.type	triggerPWM_Start, %function
 238              	triggerPWM_Start:
 239              	.LFB0:
  56:Generated_Source\PSoC5/triggerPWM.c ****     /* If not Initialized then initialize all required hardware and software */
 240              		.loc 1 56 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/triggerPWM.c ****     {
 248              		.loc 1 58 0
 249 0002 054B     		ldr	r3, .L26
 250 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 251 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/triggerPWM.c ****         triggerPWM_initVar = 1u;
 252              		.loc 1 60 0
 253 0008 FFF7FEFF 		bl	triggerPWM_Init
 254              	.LVL8:
  61:Generated_Source\PSoC5/triggerPWM.c ****     }
 255              		.loc 1 61 0
 256 000c 0122     		movs	r2, #1
 257 000e 024B     		ldr	r3, .L26
 258 0010 1A70     		strb	r2, [r3]
 259              	.L24:
  63:Generated_Source\PSoC5/triggerPWM.c **** 
 260              		.loc 1 63 0
 261 0012 FFF7FEFF 		bl	triggerPWM_Enable
 262              	.LVL9:
 263 0016 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 15


 264              	.L27:
 265              		.align	2
 266              	.L26:
 267 0018 00000000 		.word	.LANCHOR0
 268              		.cfi_endproc
 269              	.LFE0:
 270              		.size	triggerPWM_Start, .-triggerPWM_Start
 271              		.section	.text.triggerPWM_ReadControlRegister,"ax",%progbits
 272              		.align	2
 273              		.global	triggerPWM_ReadControlRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	triggerPWM_ReadControlRegister, %function
 277              	triggerPWM_ReadControlRegister:
 278              	.LFB8:
 523:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UsingFixedFunction) */
 524:Generated_Source\PSoC5/triggerPWM.c **** 
 525:Generated_Source\PSoC5/triggerPWM.c ****         #if (triggerPWM_PWMMode == triggerPWM__B_PWM__DITHER)
 526:Generated_Source\PSoC5/triggerPWM.c ****             #if(triggerPWM_UsingFixedFunction)
 527:Generated_Source\PSoC5/triggerPWM.c ****                 CY_SET_REG16(triggerPWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/triggerPWM.c ****             #else
 529:Generated_Source\PSoC5/triggerPWM.c ****                 CY_SET_REG16(triggerPWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (triggerPWM_UsingFixedFunction) */
 531:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_PWMMode == triggerPWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/triggerPWM.c ****     }
 533:Generated_Source\PSoC5/triggerPWM.c **** 
 534:Generated_Source\PSoC5/triggerPWM.c **** 
 535:Generated_Source\PSoC5/triggerPWM.c **** #else
 536:Generated_Source\PSoC5/triggerPWM.c **** 
 537:Generated_Source\PSoC5/triggerPWM.c **** 
 538:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteCompare1
 540:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/triggerPWM.c ****     *
 542:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 543:Generated_Source\PSoC5/triggerPWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/triggerPWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/triggerPWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/triggerPWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/triggerPWM.c ****     *
 548:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 549:Generated_Source\PSoC5/triggerPWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/triggerPWM.c ****     *
 551:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 552:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 553:Generated_Source\PSoC5/triggerPWM.c ****     *
 554:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/triggerPWM.c ****                                         
 557:Generated_Source\PSoC5/triggerPWM.c ****     {
 558:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UsingFixedFunction)
 559:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/triggerPWM.c ****         #else
 561:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UsingFixedFunction) */
 563:Generated_Source\PSoC5/triggerPWM.c ****     }
 564:Generated_Source\PSoC5/triggerPWM.c **** 
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 16


 565:Generated_Source\PSoC5/triggerPWM.c **** 
 566:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteCompare2
 568:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/triggerPWM.c ****     *
 570:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 571:Generated_Source\PSoC5/triggerPWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/triggerPWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/triggerPWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/triggerPWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/triggerPWM.c ****     *  mode.
 576:Generated_Source\PSoC5/triggerPWM.c ****     *
 577:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 578:Generated_Source\PSoC5/triggerPWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/triggerPWM.c ****     *
 580:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 581:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 582:Generated_Source\PSoC5/triggerPWM.c ****     *
 583:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/triggerPWM.c ****                                         
 586:Generated_Source\PSoC5/triggerPWM.c ****     {
 587:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UsingFixedFunction)
 588:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/triggerPWM.c ****         #else
 590:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG16(triggerPWM_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UsingFixedFunction) */
 592:Generated_Source\PSoC5/triggerPWM.c ****     }
 593:Generated_Source\PSoC5/triggerPWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/triggerPWM.c **** 
 595:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_DeadBandUsed)
 596:Generated_Source\PSoC5/triggerPWM.c **** 
 597:Generated_Source\PSoC5/triggerPWM.c **** 
 598:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteDeadTime
 600:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/triggerPWM.c ****     *
 602:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 603:Generated_Source\PSoC5/triggerPWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/triggerPWM.c ****     *
 605:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 606:Generated_Source\PSoC5/triggerPWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/triggerPWM.c ****     *
 608:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 609:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 610:Generated_Source\PSoC5/triggerPWM.c ****     *
 611:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/triggerPWM.c ****     {
 614:Generated_Source\PSoC5/triggerPWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/triggerPWM.c ****         #if(!triggerPWM_DeadBand2_4)
 616:Generated_Source\PSoC5/triggerPWM.c ****             CY_SET_REG8(triggerPWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/triggerPWM.c ****         #else
 618:Generated_Source\PSoC5/triggerPWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/triggerPWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/triggerPWM.c ****             triggerPWM_DEADBAND_COUNT &= ((uint8)(~triggerPWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/triggerPWM.c **** 
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 17


 622:Generated_Source\PSoC5/triggerPWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/triggerPWM.c ****             #if(triggerPWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << triggerPWM_DEADBAND_COUNT_
 625:Generated_Source\PSoC5/triggerPWM.c ****                                                     triggerPWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/triggerPWM.c ****             #else
 627:Generated_Source\PSoC5/triggerPWM.c ****                 triggerPWM_DEADBAND_COUNT |= deadtime & triggerPWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (triggerPWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/triggerPWM.c **** 
 630:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (!triggerPWM_DeadBand2_4) */
 631:Generated_Source\PSoC5/triggerPWM.c ****     }
 632:Generated_Source\PSoC5/triggerPWM.c **** 
 633:Generated_Source\PSoC5/triggerPWM.c **** 
 634:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadDeadTime
 636:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/triggerPWM.c ****     *
 638:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 639:Generated_Source\PSoC5/triggerPWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/triggerPWM.c ****     *
 641:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 642:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 643:Generated_Source\PSoC5/triggerPWM.c ****     *
 644:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 645:Generated_Source\PSoC5/triggerPWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/triggerPWM.c ****     *
 647:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/triggerPWM.c ****     uint8 triggerPWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/triggerPWM.c ****     {
 650:Generated_Source\PSoC5/triggerPWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/triggerPWM.c ****         #if(!triggerPWM_DeadBand2_4)
 652:Generated_Source\PSoC5/triggerPWM.c ****             return (CY_GET_REG8(triggerPWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/triggerPWM.c ****         #else
 654:Generated_Source\PSoC5/triggerPWM.c **** 
 655:Generated_Source\PSoC5/triggerPWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/triggerPWM.c ****             #if(triggerPWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/triggerPWM.c ****                 return ((uint8)(((uint8)(triggerPWM_DEADBAND_COUNT & triggerPWM_DEADBAND_COUNT_MASK
 658:Generated_Source\PSoC5/triggerPWM.c ****                                                                            triggerPWM_DEADBAND_COUN
 659:Generated_Source\PSoC5/triggerPWM.c ****             #else
 660:Generated_Source\PSoC5/triggerPWM.c ****                 return (triggerPWM_DEADBAND_COUNT & triggerPWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/triggerPWM.c ****             #endif /* (triggerPWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (!triggerPWM_DeadBand2_4) */
 663:Generated_Source\PSoC5/triggerPWM.c ****     }
 664:Generated_Source\PSoC5/triggerPWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/triggerPWM.c **** 
 666:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_UseStatus || triggerPWM_UsingFixedFunction)
 667:Generated_Source\PSoC5/triggerPWM.c **** 
 668:Generated_Source\PSoC5/triggerPWM.c **** 
 669:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_SetInterruptMode
 671:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/triggerPWM.c ****     *
 673:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 674:Generated_Source\PSoC5/triggerPWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/triggerPWM.c ****     *  source status register.
 676:Generated_Source\PSoC5/triggerPWM.c ****     *
 677:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 678:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 18


 679:Generated_Source\PSoC5/triggerPWM.c ****     *
 680:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 681:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 682:Generated_Source\PSoC5/triggerPWM.c ****     *
 683:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/triggerPWM.c ****     {
 686:Generated_Source\PSoC5/triggerPWM.c ****         CY_SET_REG8(triggerPWM_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/triggerPWM.c ****     }
 688:Generated_Source\PSoC5/triggerPWM.c **** 
 689:Generated_Source\PSoC5/triggerPWM.c **** 
 690:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadStatusRegister
 692:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/triggerPWM.c ****     *
 694:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 695:Generated_Source\PSoC5/triggerPWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/triggerPWM.c ****     *
 697:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 698:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 699:Generated_Source\PSoC5/triggerPWM.c ****     *
 700:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 701:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/triggerPWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/triggerPWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/triggerPWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/triggerPWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/triggerPWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/triggerPWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/triggerPWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/triggerPWM.c ****     *
 710:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/triggerPWM.c ****     uint8 triggerPWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/triggerPWM.c ****     {
 713:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG8(triggerPWM_STATUS_PTR));
 714:Generated_Source\PSoC5/triggerPWM.c ****     }
 715:Generated_Source\PSoC5/triggerPWM.c **** 
 716:Generated_Source\PSoC5/triggerPWM.c **** #endif /* (triggerPWM_UseStatus || triggerPWM_UsingFixedFunction) */
 717:Generated_Source\PSoC5/triggerPWM.c **** 
 718:Generated_Source\PSoC5/triggerPWM.c **** 
 719:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_UseControl)
 720:Generated_Source\PSoC5/triggerPWM.c **** 
 721:Generated_Source\PSoC5/triggerPWM.c **** 
 722:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadControlRegister
 724:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/triggerPWM.c ****     *
 726:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 727:Generated_Source\PSoC5/triggerPWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/triggerPWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/triggerPWM.c ****     *
 730:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 731:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 732:Generated_Source\PSoC5/triggerPWM.c ****     *
 733:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 734:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/triggerPWM.c ****     *
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 19


 736:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/triggerPWM.c ****     uint8 triggerPWM_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/triggerPWM.c ****     {
 279              		.loc 1 738 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 739:Generated_Source\PSoC5/triggerPWM.c ****         uint8 result;
 740:Generated_Source\PSoC5/triggerPWM.c **** 
 741:Generated_Source\PSoC5/triggerPWM.c ****         result = CY_GET_REG8(triggerPWM_CONTROL_PTR);
 284              		.loc 1 741 0
 285 0000 014B     		ldr	r3, .L29
 286 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 287              	.LVL10:
 742:Generated_Source\PSoC5/triggerPWM.c ****         return (result);
 743:Generated_Source\PSoC5/triggerPWM.c ****     }
 288              		.loc 1 743 0
 289 0004 7047     		bx	lr
 290              	.L30:
 291 0006 00BF     		.align	2
 292              	.L29:
 293 0008 7D640040 		.word	1073767549
 294              		.cfi_endproc
 295              	.LFE8:
 296              		.size	triggerPWM_ReadControlRegister, .-triggerPWM_ReadControlRegister
 297              		.section	.text.triggerPWM_WriteControlRegister,"ax",%progbits
 298              		.align	2
 299              		.global	triggerPWM_WriteControlRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	triggerPWM_WriteControlRegister, %function
 303              	triggerPWM_WriteControlRegister:
 304              	.LFB9:
 744:Generated_Source\PSoC5/triggerPWM.c **** 
 745:Generated_Source\PSoC5/triggerPWM.c **** 
 746:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_WriteControlRegister
 748:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/triggerPWM.c ****     *
 750:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 751:Generated_Source\PSoC5/triggerPWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/triggerPWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/triggerPWM.c ****     *
 754:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 755:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/triggerPWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/triggerPWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/triggerPWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/triggerPWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/triggerPWM.c ****     *
 761:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 762:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 763:Generated_Source\PSoC5/triggerPWM.c ****     *
 764:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/triggerPWM.c ****     void triggerPWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/triggerPWM.c ****     {
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 20


 305              		.loc 1 766 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL11:
 767:Generated_Source\PSoC5/triggerPWM.c ****         CY_SET_REG8(triggerPWM_CONTROL_PTR, control);
 311              		.loc 1 767 0
 312 0000 014B     		ldr	r3, .L32
 313 0002 1870     		strb	r0, [r3]
 314 0004 7047     		bx	lr
 315              	.L33:
 316 0006 00BF     		.align	2
 317              	.L32:
 318 0008 7D640040 		.word	1073767549
 319              		.cfi_endproc
 320              	.LFE9:
 321              		.size	triggerPWM_WriteControlRegister, .-triggerPWM_WriteControlRegister
 322              		.section	.text.triggerPWM_ReadCapture,"ax",%progbits
 323              		.align	2
 324              		.global	triggerPWM_ReadCapture
 325              		.thumb
 326              		.thumb_func
 327              		.type	triggerPWM_ReadCapture, %function
 328              	triggerPWM_ReadCapture:
 329              	.LFB10:
 768:Generated_Source\PSoC5/triggerPWM.c ****     }
 769:Generated_Source\PSoC5/triggerPWM.c **** 
 770:Generated_Source\PSoC5/triggerPWM.c **** #endif /* (triggerPWM_UseControl) */
 771:Generated_Source\PSoC5/triggerPWM.c **** 
 772:Generated_Source\PSoC5/triggerPWM.c **** 
 773:Generated_Source\PSoC5/triggerPWM.c **** #if (!triggerPWM_UsingFixedFunction)
 774:Generated_Source\PSoC5/triggerPWM.c **** 
 775:Generated_Source\PSoC5/triggerPWM.c **** 
 776:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadCapture
 778:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/triggerPWM.c ****     *
 780:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 781:Generated_Source\PSoC5/triggerPWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/triggerPWM.c ****     *
 783:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 784:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 785:Generated_Source\PSoC5/triggerPWM.c ****     *
 786:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 787:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/triggerPWM.c ****     *
 789:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/triggerPWM.c ****     uint16 triggerPWM_ReadCapture(void) 
 791:Generated_Source\PSoC5/triggerPWM.c ****     {
 330              		.loc 1 791 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 792:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG16(triggerPWM_CAPTURE_LSB_PTR));
 335              		.loc 1 792 0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 21


 336 0000 014B     		ldr	r3, .L35
 337 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/triggerPWM.c ****     }
 338              		.loc 1 793 0
 339 0004 80B2     		uxth	r0, r0
 340 0006 7047     		bx	lr
 341              	.L36:
 342              		.align	2
 343              	.L35:
 344 0008 B8680040 		.word	1073768632
 345              		.cfi_endproc
 346              	.LFE10:
 347              		.size	triggerPWM_ReadCapture, .-triggerPWM_ReadCapture
 348              		.section	.text.triggerPWM_ReadCompare,"ax",%progbits
 349              		.align	2
 350              		.global	triggerPWM_ReadCompare
 351              		.thumb
 352              		.thumb_func
 353              		.type	triggerPWM_ReadCompare, %function
 354              	triggerPWM_ReadCompare:
 355              	.LFB11:
 794:Generated_Source\PSoC5/triggerPWM.c **** 
 795:Generated_Source\PSoC5/triggerPWM.c **** #endif /* (!triggerPWM_UsingFixedFunction) */
 796:Generated_Source\PSoC5/triggerPWM.c **** 
 797:Generated_Source\PSoC5/triggerPWM.c **** 
 798:Generated_Source\PSoC5/triggerPWM.c **** #if (triggerPWM_UseOneCompareMode)
 799:Generated_Source\PSoC5/triggerPWM.c **** 
 800:Generated_Source\PSoC5/triggerPWM.c **** 
 801:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadCompare
 803:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/triggerPWM.c ****     *
 805:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 806:Generated_Source\PSoC5/triggerPWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/triggerPWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/triggerPWM.c ****     *
 809:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 810:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 811:Generated_Source\PSoC5/triggerPWM.c ****     *
 812:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 813:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/triggerPWM.c ****     *
 815:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/triggerPWM.c ****     uint16 triggerPWM_ReadCompare(void) 
 817:Generated_Source\PSoC5/triggerPWM.c ****     {
 356              		.loc 1 817 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 818:Generated_Source\PSoC5/triggerPWM.c ****         #if(triggerPWM_UsingFixedFunction)
 819:Generated_Source\PSoC5/triggerPWM.c ****             return ((uint16)CY_GET_REG16(triggerPWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/triggerPWM.c ****         #else
 821:Generated_Source\PSoC5/triggerPWM.c ****             return (CY_GET_REG16(triggerPWM_COMPARE1_LSB_PTR));
 361              		.loc 1 821 0
 362 0000 014B     		ldr	r3, .L38
 363 0002 1888     		ldrh	r0, [r3]
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 22


 822:Generated_Source\PSoC5/triggerPWM.c ****         #endif /* (triggerPWM_UsingFixedFunction) */
 823:Generated_Source\PSoC5/triggerPWM.c ****     }
 364              		.loc 1 823 0
 365 0004 80B2     		uxth	r0, r0
 366 0006 7047     		bx	lr
 367              	.L39:
 368              		.align	2
 369              	.L38:
 370 0008 58680040 		.word	1073768536
 371              		.cfi_endproc
 372              	.LFE11:
 373              		.size	triggerPWM_ReadCompare, .-triggerPWM_ReadCompare
 374              		.section	.text.triggerPWM_ReadPeriod,"ax",%progbits
 375              		.align	2
 376              		.global	triggerPWM_ReadPeriod
 377              		.thumb
 378              		.thumb_func
 379              		.type	triggerPWM_ReadPeriod, %function
 380              	triggerPWM_ReadPeriod:
 381              	.LFB12:
 824:Generated_Source\PSoC5/triggerPWM.c **** 
 825:Generated_Source\PSoC5/triggerPWM.c **** #else
 826:Generated_Source\PSoC5/triggerPWM.c **** 
 827:Generated_Source\PSoC5/triggerPWM.c **** 
 828:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadCompare1
 830:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/triggerPWM.c ****     *
 832:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 833:Generated_Source\PSoC5/triggerPWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/triggerPWM.c ****     *
 835:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 836:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 837:Generated_Source\PSoC5/triggerPWM.c ****     *
 838:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 839:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/triggerPWM.c ****     *
 841:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/triggerPWM.c ****     uint16 triggerPWM_ReadCompare1(void) 
 843:Generated_Source\PSoC5/triggerPWM.c ****     {
 844:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG16(triggerPWM_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/triggerPWM.c ****     }
 846:Generated_Source\PSoC5/triggerPWM.c **** 
 847:Generated_Source\PSoC5/triggerPWM.c **** 
 848:Generated_Source\PSoC5/triggerPWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/triggerPWM.c ****     * Function Name: triggerPWM_ReadCompare2
 850:Generated_Source\PSoC5/triggerPWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/triggerPWM.c ****     *
 852:Generated_Source\PSoC5/triggerPWM.c ****     * Summary:
 853:Generated_Source\PSoC5/triggerPWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/triggerPWM.c ****     *
 855:Generated_Source\PSoC5/triggerPWM.c ****     * Parameters:
 856:Generated_Source\PSoC5/triggerPWM.c ****     *  None
 857:Generated_Source\PSoC5/triggerPWM.c ****     *
 858:Generated_Source\PSoC5/triggerPWM.c ****     * Return:
 859:Generated_Source\PSoC5/triggerPWM.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/triggerPWM.c ****     *
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 23


 861:Generated_Source\PSoC5/triggerPWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/triggerPWM.c ****     uint16 triggerPWM_ReadCompare2(void) 
 863:Generated_Source\PSoC5/triggerPWM.c ****     {
 864:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG16(triggerPWM_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/triggerPWM.c ****     }
 866:Generated_Source\PSoC5/triggerPWM.c **** 
 867:Generated_Source\PSoC5/triggerPWM.c **** #endif /* (triggerPWM_UseOneCompareMode) */
 868:Generated_Source\PSoC5/triggerPWM.c **** 
 869:Generated_Source\PSoC5/triggerPWM.c **** 
 870:Generated_Source\PSoC5/triggerPWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/triggerPWM.c **** * Function Name: triggerPWM_ReadPeriod
 872:Generated_Source\PSoC5/triggerPWM.c **** ********************************************************************************
 873:Generated_Source\PSoC5/triggerPWM.c **** *
 874:Generated_Source\PSoC5/triggerPWM.c **** * Summary:
 875:Generated_Source\PSoC5/triggerPWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/triggerPWM.c **** *
 877:Generated_Source\PSoC5/triggerPWM.c **** * Parameters:
 878:Generated_Source\PSoC5/triggerPWM.c **** *  None
 879:Generated_Source\PSoC5/triggerPWM.c **** *
 880:Generated_Source\PSoC5/triggerPWM.c **** * Return:
 881:Generated_Source\PSoC5/triggerPWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/triggerPWM.c **** *
 883:Generated_Source\PSoC5/triggerPWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/triggerPWM.c **** uint16 triggerPWM_ReadPeriod(void) 
 885:Generated_Source\PSoC5/triggerPWM.c **** {
 382              		.loc 1 885 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 886:Generated_Source\PSoC5/triggerPWM.c ****     #if(triggerPWM_UsingFixedFunction)
 887:Generated_Source\PSoC5/triggerPWM.c ****         return ((uint16)CY_GET_REG16(triggerPWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/triggerPWM.c ****     #else
 889:Generated_Source\PSoC5/triggerPWM.c ****         return (CY_GET_REG16(triggerPWM_PERIOD_LSB_PTR));
 387              		.loc 1 889 0
 388 0000 014B     		ldr	r3, .L41
 389 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/triggerPWM.c ****     #endif /* (triggerPWM_UsingFixedFunction) */
 891:Generated_Source\PSoC5/triggerPWM.c **** }
 390              		.loc 1 891 0
 391 0004 80B2     		uxth	r0, r0
 392 0006 7047     		bx	lr
 393              	.L42:
 394              		.align	2
 395              	.L41:
 396 0008 98680040 		.word	1073768600
 397              		.cfi_endproc
 398              	.LFE12:
 399              		.size	triggerPWM_ReadPeriod, .-triggerPWM_ReadPeriod
 400              		.global	triggerPWM_initVar
 401              		.bss
 402              		.set	.LANCHOR0,. + 0
 403              		.type	triggerPWM_initVar, %object
 404              		.size	triggerPWM_initVar, 1
 405              	triggerPWM_initVar:
 406 0000 00       		.space	1
 407              		.text
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 24


 408              	.Letext0:
 409              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 410              		.section	.debug_info,"",%progbits
 411              	.Ldebug_info0:
 412 0000 91020000 		.4byte	0x291
 413 0004 0400     		.2byte	0x4
 414 0006 00000000 		.4byte	.Ldebug_abbrev0
 415 000a 04       		.byte	0x4
 416 000b 01       		.uleb128 0x1
 417 000c CF000000 		.4byte	.LASF36
 418 0010 0C       		.byte	0xc
 419 0011 AD010000 		.4byte	.LASF37
 420 0015 C3020000 		.4byte	.LASF38
 421 0019 00000000 		.4byte	.Ldebug_ranges0+0
 422 001d 00000000 		.4byte	0
 423 0021 00000000 		.4byte	.Ldebug_line0
 424 0025 02       		.uleb128 0x2
 425 0026 01       		.byte	0x1
 426 0027 06       		.byte	0x6
 427 0028 0E030000 		.4byte	.LASF0
 428 002c 02       		.uleb128 0x2
 429 002d 01       		.byte	0x1
 430 002e 08       		.byte	0x8
 431 002f 9F010000 		.4byte	.LASF1
 432 0033 02       		.uleb128 0x2
 433 0034 02       		.byte	0x2
 434 0035 05       		.byte	0x5
 435 0036 89020000 		.4byte	.LASF2
 436 003a 02       		.uleb128 0x2
 437 003b 02       		.byte	0x2
 438 003c 07       		.byte	0x7
 439 003d 4C000000 		.4byte	.LASF3
 440 0041 02       		.uleb128 0x2
 441 0042 04       		.byte	0x4
 442 0043 05       		.byte	0x5
 443 0044 AE020000 		.4byte	.LASF4
 444 0048 02       		.uleb128 0x2
 445 0049 04       		.byte	0x4
 446 004a 07       		.byte	0x7
 447 004b 6D010000 		.4byte	.LASF5
 448 004f 02       		.uleb128 0x2
 449 0050 08       		.byte	0x8
 450 0051 05       		.byte	0x5
 451 0052 76020000 		.4byte	.LASF6
 452 0056 02       		.uleb128 0x2
 453 0057 08       		.byte	0x8
 454 0058 07       		.byte	0x7
 455 0059 1B020000 		.4byte	.LASF7
 456 005d 03       		.uleb128 0x3
 457 005e 04       		.byte	0x4
 458 005f 05       		.byte	0x5
 459 0060 696E7400 		.ascii	"int\000"
 460 0064 02       		.uleb128 0x2
 461 0065 04       		.byte	0x4
 462 0066 07       		.byte	0x7
 463 0067 DF010000 		.4byte	.LASF8
 464 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 25


 465 006c 91010000 		.4byte	.LASF9
 466 0070 02       		.byte	0x2
 467 0071 C2       		.byte	0xc2
 468 0072 2C000000 		.4byte	0x2c
 469 0076 04       		.uleb128 0x4
 470 0077 D8010000 		.4byte	.LASF10
 471 007b 02       		.byte	0x2
 472 007c C3       		.byte	0xc3
 473 007d 3A000000 		.4byte	0x3a
 474 0081 02       		.uleb128 0x2
 475 0082 04       		.byte	0x4
 476 0083 04       		.byte	0x4
 477 0084 8E000000 		.4byte	.LASF11
 478 0088 02       		.uleb128 0x2
 479 0089 08       		.byte	0x8
 480 008a 04       		.byte	0x4
 481 008b D1010000 		.4byte	.LASF12
 482 008f 02       		.uleb128 0x2
 483 0090 01       		.byte	0x1
 484 0091 08       		.byte	0x8
 485 0092 84020000 		.4byte	.LASF13
 486 0096 05       		.uleb128 0x5
 487 0097 49020000 		.4byte	.LASF14
 488 009b 02       		.byte	0x2
 489 009c 6C01     		.2byte	0x16c
 490 009e A2000000 		.4byte	0xa2
 491 00a2 06       		.uleb128 0x6
 492 00a3 6B000000 		.4byte	0x6b
 493 00a7 05       		.uleb128 0x5
 494 00a8 00000000 		.4byte	.LASF15
 495 00ac 02       		.byte	0x2
 496 00ad 6D01     		.2byte	0x16d
 497 00af B3000000 		.4byte	0xb3
 498 00b3 06       		.uleb128 0x6
 499 00b4 76000000 		.4byte	0x76
 500 00b8 02       		.uleb128 0x2
 501 00b9 08       		.byte	0x8
 502 00ba 04       		.byte	0x4
 503 00bb B7020000 		.4byte	.LASF16
 504 00bf 02       		.uleb128 0x2
 505 00c0 04       		.byte	0x4
 506 00c1 07       		.byte	0x7
 507 00c2 4E020000 		.4byte	.LASF17
 508 00c6 07       		.uleb128 0x7
 509 00c7 7F010000 		.4byte	.LASF18
 510 00cb 01       		.byte	0x1
 511 00cc C7       		.byte	0xc7
 512 00cd 00000000 		.4byte	.LFB2
 513 00d1 10000000 		.4byte	.LFE2-.LFB2
 514 00d5 01       		.uleb128 0x1
 515 00d6 9C       		.byte	0x9c
 516 00d7 07       		.uleb128 0x7
 517 00d8 39020000 		.4byte	.LASF19
 518 00dc 01       		.byte	0x1
 519 00dd E9       		.byte	0xe9
 520 00de 00000000 		.4byte	.LFB3
 521 00e2 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 26


 522 00e6 01       		.uleb128 0x1
 523 00e7 9C       		.byte	0x9c
 524 00e8 08       		.uleb128 0x8
 525 00e9 03020000 		.4byte	.LASF20
 526 00ed 01       		.byte	0x1
 527 00ee 9301     		.2byte	0x193
 528 00f0 00000000 		.4byte	.LFB4
 529 00f4 0C000000 		.4byte	.LFE4-.LFB4
 530 00f8 01       		.uleb128 0x1
 531 00f9 9C       		.byte	0x9c
 532 00fa 0D010000 		.4byte	0x10d
 533 00fe 09       		.uleb128 0x9
 534 00ff 94000000 		.4byte	.LASF22
 535 0103 01       		.byte	0x1
 536 0104 9301     		.2byte	0x193
 537 0106 76000000 		.4byte	0x76
 538 010a 01       		.uleb128 0x1
 539 010b 50       		.byte	0x50
 540 010c 00       		.byte	0
 541 010d 0A       		.uleb128 0xa
 542 010e EC010000 		.4byte	.LASF32
 543 0112 01       		.byte	0x1
 544 0113 A901     		.2byte	0x1a9
 545 0115 76000000 		.4byte	0x76
 546 0119 00000000 		.4byte	.LFB5
 547 011d 14000000 		.4byte	.LFE5-.LFB5
 548 0121 01       		.uleb128 0x1
 549 0122 9C       		.byte	0x9c
 550 0123 08       		.uleb128 0x8
 551 0124 5F000000 		.4byte	.LASF21
 552 0128 01       		.byte	0x1
 553 0129 E201     		.2byte	0x1e2
 554 012b 00000000 		.4byte	.LFB6
 555 012f 0C000000 		.4byte	.LFE6-.LFB6
 556 0133 01       		.uleb128 0x1
 557 0134 9C       		.byte	0x9c
 558 0135 48010000 		.4byte	0x148
 559 0139 09       		.uleb128 0x9
 560 013a 45000000 		.4byte	.LASF23
 561 013e 01       		.byte	0x1
 562 013f E201     		.2byte	0x1e2
 563 0141 76000000 		.4byte	0x76
 564 0145 01       		.uleb128 0x1
 565 0146 50       		.byte	0x50
 566 0147 00       		.byte	0
 567 0148 08       		.uleb128 0x8
 568 0149 76000000 		.4byte	.LASF24
 569 014d 01       		.byte	0x1
 570 014e 0402     		.2byte	0x204
 571 0150 00000000 		.4byte	.LFB7
 572 0154 0C000000 		.4byte	.LFE7-.LFB7
 573 0158 01       		.uleb128 0x1
 574 0159 9C       		.byte	0x9c
 575 015a 6D010000 		.4byte	0x16d
 576 015e 09       		.uleb128 0x9
 577 015f 1A030000 		.4byte	.LASF25
 578 0163 01       		.byte	0x1
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 27


 579 0164 0402     		.2byte	0x204
 580 0166 76000000 		.4byte	0x76
 581 016a 01       		.uleb128 0x1
 582 016b 50       		.byte	0x50
 583 016c 00       		.byte	0
 584 016d 0B       		.uleb128 0xb
 585 016e 5D010000 		.4byte	.LASF26
 586 0172 01       		.byte	0x1
 587 0173 54       		.byte	0x54
 588 0174 00000000 		.4byte	.LFB1
 589 0178 40000000 		.4byte	.LFE1-.LFB1
 590 017c 01       		.uleb128 0x1
 591 017d 9C       		.byte	0x9c
 592 017e CB010000 		.4byte	0x1cb
 593 0182 0C       		.uleb128 0xc
 594 0183 93020000 		.4byte	.LASF28
 595 0187 01       		.byte	0x1
 596 0188 57       		.byte	0x57
 597 0189 6B000000 		.4byte	0x6b
 598 018d 00000000 		.4byte	.LLST0
 599 0191 0D       		.uleb128 0xd
 600 0192 2C000000 		.4byte	.LVL5
 601 0196 E8000000 		.4byte	0xe8
 602 019a A6010000 		.4byte	0x1a6
 603 019e 0E       		.uleb128 0xe
 604 019f 01       		.uleb128 0x1
 605 01a0 50       		.byte	0x50
 606 01a1 03       		.uleb128 0x3
 607 01a2 0B       		.byte	0xb
 608 01a3 3582     		.2byte	0x8235
 609 01a5 00       		.byte	0
 610 01a6 0D       		.uleb128 0xd
 611 01a7 34000000 		.4byte	.LVL6
 612 01ab 23010000 		.4byte	0x123
 613 01af BB010000 		.4byte	0x1bb
 614 01b3 0E       		.uleb128 0xe
 615 01b4 01       		.uleb128 0x1
 616 01b5 50       		.byte	0x50
 617 01b6 03       		.uleb128 0x3
 618 01b7 0B       		.byte	0xb
 619 01b8 3582     		.2byte	0x8235
 620 01ba 00       		.byte	0
 621 01bb 0F       		.uleb128 0xf
 622 01bc 3A000000 		.4byte	.LVL7
 623 01c0 48010000 		.4byte	0x148
 624 01c4 0E       		.uleb128 0xe
 625 01c5 01       		.uleb128 0x1
 626 01c6 50       		.byte	0x50
 627 01c7 01       		.uleb128 0x1
 628 01c8 35       		.byte	0x35
 629 01c9 00       		.byte	0
 630 01ca 00       		.byte	0
 631 01cb 0B       		.uleb128 0xb
 632 01cc 06000000 		.4byte	.LASF27
 633 01d0 01       		.byte	0x1
 634 01d1 37       		.byte	0x37
 635 01d2 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 28


 636 01d6 1C000000 		.4byte	.LFE0-.LFB0
 637 01da 01       		.uleb128 0x1
 638 01db 9C       		.byte	0x9c
 639 01dc F3010000 		.4byte	0x1f3
 640 01e0 10       		.uleb128 0x10
 641 01e1 0C000000 		.4byte	.LVL8
 642 01e5 6D010000 		.4byte	0x16d
 643 01e9 10       		.uleb128 0x10
 644 01ea 16000000 		.4byte	.LVL9
 645 01ee C6000000 		.4byte	0xc6
 646 01f2 00       		.byte	0
 647 01f3 11       		.uleb128 0x11
 648 01f4 57020000 		.4byte	.LASF39
 649 01f8 01       		.byte	0x1
 650 01f9 E102     		.2byte	0x2e1
 651 01fb 6B000000 		.4byte	0x6b
 652 01ff 00000000 		.4byte	.LFB8
 653 0203 0C000000 		.4byte	.LFE8-.LFB8
 654 0207 01       		.uleb128 0x1
 655 0208 9C       		.byte	0x9c
 656 0209 1C020000 		.4byte	0x21c
 657 020d 12       		.uleb128 0x12
 658 020e 32020000 		.4byte	.LASF29
 659 0212 01       		.byte	0x1
 660 0213 E302     		.2byte	0x2e3
 661 0215 6B000000 		.4byte	0x6b
 662 0219 01       		.uleb128 0x1
 663 021a 50       		.byte	0x50
 664 021b 00       		.byte	0
 665 021c 08       		.uleb128 0x8
 666 021d AF000000 		.4byte	.LASF30
 667 0221 01       		.byte	0x1
 668 0222 FD02     		.2byte	0x2fd
 669 0224 00000000 		.4byte	.LFB9
 670 0228 0C000000 		.4byte	.LFE9-.LFB9
 671 022c 01       		.uleb128 0x1
 672 022d 9C       		.byte	0x9c
 673 022e 41020000 		.4byte	0x241
 674 0232 09       		.uleb128 0x9
 675 0233 97010000 		.4byte	.LASF31
 676 0237 01       		.byte	0x1
 677 0238 FD02     		.2byte	0x2fd
 678 023a 6B000000 		.4byte	0x6b
 679 023e 01       		.uleb128 0x1
 680 023f 50       		.byte	0x50
 681 0240 00       		.byte	0
 682 0241 0A       		.uleb128 0xa
 683 0242 2E000000 		.4byte	.LASF33
 684 0246 01       		.byte	0x1
 685 0247 1603     		.2byte	0x316
 686 0249 76000000 		.4byte	0x76
 687 024d 00000000 		.4byte	.LFB10
 688 0251 0C000000 		.4byte	.LFE10-.LFB10
 689 0255 01       		.uleb128 0x1
 690 0256 9C       		.byte	0x9c
 691 0257 0A       		.uleb128 0xa
 692 0258 17000000 		.4byte	.LASF34
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 29


 693 025c 01       		.byte	0x1
 694 025d 3003     		.2byte	0x330
 695 025f 76000000 		.4byte	0x76
 696 0263 00000000 		.4byte	.LFB11
 697 0267 0C000000 		.4byte	.LFE11-.LFB11
 698 026b 01       		.uleb128 0x1
 699 026c 9C       		.byte	0x9c
 700 026d 0A       		.uleb128 0xa
 701 026e 98020000 		.4byte	.LASF35
 702 0272 01       		.byte	0x1
 703 0273 7403     		.2byte	0x374
 704 0275 76000000 		.4byte	0x76
 705 0279 00000000 		.4byte	.LFB12
 706 027d 0C000000 		.4byte	.LFE12-.LFB12
 707 0281 01       		.uleb128 0x1
 708 0282 9C       		.byte	0x9c
 709 0283 13       		.uleb128 0x13
 710 0284 9C000000 		.4byte	.LASF40
 711 0288 01       		.byte	0x1
 712 0289 20       		.byte	0x20
 713 028a 6B000000 		.4byte	0x6b
 714 028e 05       		.uleb128 0x5
 715 028f 03       		.byte	0x3
 716 0290 00000000 		.4byte	triggerPWM_initVar
 717 0294 00       		.byte	0
 718              		.section	.debug_abbrev,"",%progbits
 719              	.Ldebug_abbrev0:
 720 0000 01       		.uleb128 0x1
 721 0001 11       		.uleb128 0x11
 722 0002 01       		.byte	0x1
 723 0003 25       		.uleb128 0x25
 724 0004 0E       		.uleb128 0xe
 725 0005 13       		.uleb128 0x13
 726 0006 0B       		.uleb128 0xb
 727 0007 03       		.uleb128 0x3
 728 0008 0E       		.uleb128 0xe
 729 0009 1B       		.uleb128 0x1b
 730 000a 0E       		.uleb128 0xe
 731 000b 55       		.uleb128 0x55
 732 000c 17       		.uleb128 0x17
 733 000d 11       		.uleb128 0x11
 734 000e 01       		.uleb128 0x1
 735 000f 10       		.uleb128 0x10
 736 0010 17       		.uleb128 0x17
 737 0011 00       		.byte	0
 738 0012 00       		.byte	0
 739 0013 02       		.uleb128 0x2
 740 0014 24       		.uleb128 0x24
 741 0015 00       		.byte	0
 742 0016 0B       		.uleb128 0xb
 743 0017 0B       		.uleb128 0xb
 744 0018 3E       		.uleb128 0x3e
 745 0019 0B       		.uleb128 0xb
 746 001a 03       		.uleb128 0x3
 747 001b 0E       		.uleb128 0xe
 748 001c 00       		.byte	0
 749 001d 00       		.byte	0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 30


 750 001e 03       		.uleb128 0x3
 751 001f 24       		.uleb128 0x24
 752 0020 00       		.byte	0
 753 0021 0B       		.uleb128 0xb
 754 0022 0B       		.uleb128 0xb
 755 0023 3E       		.uleb128 0x3e
 756 0024 0B       		.uleb128 0xb
 757 0025 03       		.uleb128 0x3
 758 0026 08       		.uleb128 0x8
 759 0027 00       		.byte	0
 760 0028 00       		.byte	0
 761 0029 04       		.uleb128 0x4
 762 002a 16       		.uleb128 0x16
 763 002b 00       		.byte	0
 764 002c 03       		.uleb128 0x3
 765 002d 0E       		.uleb128 0xe
 766 002e 3A       		.uleb128 0x3a
 767 002f 0B       		.uleb128 0xb
 768 0030 3B       		.uleb128 0x3b
 769 0031 0B       		.uleb128 0xb
 770 0032 49       		.uleb128 0x49
 771 0033 13       		.uleb128 0x13
 772 0034 00       		.byte	0
 773 0035 00       		.byte	0
 774 0036 05       		.uleb128 0x5
 775 0037 16       		.uleb128 0x16
 776 0038 00       		.byte	0
 777 0039 03       		.uleb128 0x3
 778 003a 0E       		.uleb128 0xe
 779 003b 3A       		.uleb128 0x3a
 780 003c 0B       		.uleb128 0xb
 781 003d 3B       		.uleb128 0x3b
 782 003e 05       		.uleb128 0x5
 783 003f 49       		.uleb128 0x49
 784 0040 13       		.uleb128 0x13
 785 0041 00       		.byte	0
 786 0042 00       		.byte	0
 787 0043 06       		.uleb128 0x6
 788 0044 35       		.uleb128 0x35
 789 0045 00       		.byte	0
 790 0046 49       		.uleb128 0x49
 791 0047 13       		.uleb128 0x13
 792 0048 00       		.byte	0
 793 0049 00       		.byte	0
 794 004a 07       		.uleb128 0x7
 795 004b 2E       		.uleb128 0x2e
 796 004c 00       		.byte	0
 797 004d 3F       		.uleb128 0x3f
 798 004e 19       		.uleb128 0x19
 799 004f 03       		.uleb128 0x3
 800 0050 0E       		.uleb128 0xe
 801 0051 3A       		.uleb128 0x3a
 802 0052 0B       		.uleb128 0xb
 803 0053 3B       		.uleb128 0x3b
 804 0054 0B       		.uleb128 0xb
 805 0055 27       		.uleb128 0x27
 806 0056 19       		.uleb128 0x19
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 31


 807 0057 11       		.uleb128 0x11
 808 0058 01       		.uleb128 0x1
 809 0059 12       		.uleb128 0x12
 810 005a 06       		.uleb128 0x6
 811 005b 40       		.uleb128 0x40
 812 005c 18       		.uleb128 0x18
 813 005d 9742     		.uleb128 0x2117
 814 005f 19       		.uleb128 0x19
 815 0060 00       		.byte	0
 816 0061 00       		.byte	0
 817 0062 08       		.uleb128 0x8
 818 0063 2E       		.uleb128 0x2e
 819 0064 01       		.byte	0x1
 820 0065 3F       		.uleb128 0x3f
 821 0066 19       		.uleb128 0x19
 822 0067 03       		.uleb128 0x3
 823 0068 0E       		.uleb128 0xe
 824 0069 3A       		.uleb128 0x3a
 825 006a 0B       		.uleb128 0xb
 826 006b 3B       		.uleb128 0x3b
 827 006c 05       		.uleb128 0x5
 828 006d 27       		.uleb128 0x27
 829 006e 19       		.uleb128 0x19
 830 006f 11       		.uleb128 0x11
 831 0070 01       		.uleb128 0x1
 832 0071 12       		.uleb128 0x12
 833 0072 06       		.uleb128 0x6
 834 0073 40       		.uleb128 0x40
 835 0074 18       		.uleb128 0x18
 836 0075 9742     		.uleb128 0x2117
 837 0077 19       		.uleb128 0x19
 838 0078 01       		.uleb128 0x1
 839 0079 13       		.uleb128 0x13
 840 007a 00       		.byte	0
 841 007b 00       		.byte	0
 842 007c 09       		.uleb128 0x9
 843 007d 05       		.uleb128 0x5
 844 007e 00       		.byte	0
 845 007f 03       		.uleb128 0x3
 846 0080 0E       		.uleb128 0xe
 847 0081 3A       		.uleb128 0x3a
 848 0082 0B       		.uleb128 0xb
 849 0083 3B       		.uleb128 0x3b
 850 0084 05       		.uleb128 0x5
 851 0085 49       		.uleb128 0x49
 852 0086 13       		.uleb128 0x13
 853 0087 02       		.uleb128 0x2
 854 0088 18       		.uleb128 0x18
 855 0089 00       		.byte	0
 856 008a 00       		.byte	0
 857 008b 0A       		.uleb128 0xa
 858 008c 2E       		.uleb128 0x2e
 859 008d 00       		.byte	0
 860 008e 3F       		.uleb128 0x3f
 861 008f 19       		.uleb128 0x19
 862 0090 03       		.uleb128 0x3
 863 0091 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 32


 864 0092 3A       		.uleb128 0x3a
 865 0093 0B       		.uleb128 0xb
 866 0094 3B       		.uleb128 0x3b
 867 0095 05       		.uleb128 0x5
 868 0096 27       		.uleb128 0x27
 869 0097 19       		.uleb128 0x19
 870 0098 49       		.uleb128 0x49
 871 0099 13       		.uleb128 0x13
 872 009a 11       		.uleb128 0x11
 873 009b 01       		.uleb128 0x1
 874 009c 12       		.uleb128 0x12
 875 009d 06       		.uleb128 0x6
 876 009e 40       		.uleb128 0x40
 877 009f 18       		.uleb128 0x18
 878 00a0 9742     		.uleb128 0x2117
 879 00a2 19       		.uleb128 0x19
 880 00a3 00       		.byte	0
 881 00a4 00       		.byte	0
 882 00a5 0B       		.uleb128 0xb
 883 00a6 2E       		.uleb128 0x2e
 884 00a7 01       		.byte	0x1
 885 00a8 3F       		.uleb128 0x3f
 886 00a9 19       		.uleb128 0x19
 887 00aa 03       		.uleb128 0x3
 888 00ab 0E       		.uleb128 0xe
 889 00ac 3A       		.uleb128 0x3a
 890 00ad 0B       		.uleb128 0xb
 891 00ae 3B       		.uleb128 0x3b
 892 00af 0B       		.uleb128 0xb
 893 00b0 27       		.uleb128 0x27
 894 00b1 19       		.uleb128 0x19
 895 00b2 11       		.uleb128 0x11
 896 00b3 01       		.uleb128 0x1
 897 00b4 12       		.uleb128 0x12
 898 00b5 06       		.uleb128 0x6
 899 00b6 40       		.uleb128 0x40
 900 00b7 18       		.uleb128 0x18
 901 00b8 9742     		.uleb128 0x2117
 902 00ba 19       		.uleb128 0x19
 903 00bb 01       		.uleb128 0x1
 904 00bc 13       		.uleb128 0x13
 905 00bd 00       		.byte	0
 906 00be 00       		.byte	0
 907 00bf 0C       		.uleb128 0xc
 908 00c0 34       		.uleb128 0x34
 909 00c1 00       		.byte	0
 910 00c2 03       		.uleb128 0x3
 911 00c3 0E       		.uleb128 0xe
 912 00c4 3A       		.uleb128 0x3a
 913 00c5 0B       		.uleb128 0xb
 914 00c6 3B       		.uleb128 0x3b
 915 00c7 0B       		.uleb128 0xb
 916 00c8 49       		.uleb128 0x49
 917 00c9 13       		.uleb128 0x13
 918 00ca 02       		.uleb128 0x2
 919 00cb 17       		.uleb128 0x17
 920 00cc 00       		.byte	0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 33


 921 00cd 00       		.byte	0
 922 00ce 0D       		.uleb128 0xd
 923 00cf 898201   		.uleb128 0x4109
 924 00d2 01       		.byte	0x1
 925 00d3 11       		.uleb128 0x11
 926 00d4 01       		.uleb128 0x1
 927 00d5 31       		.uleb128 0x31
 928 00d6 13       		.uleb128 0x13
 929 00d7 01       		.uleb128 0x1
 930 00d8 13       		.uleb128 0x13
 931 00d9 00       		.byte	0
 932 00da 00       		.byte	0
 933 00db 0E       		.uleb128 0xe
 934 00dc 8A8201   		.uleb128 0x410a
 935 00df 00       		.byte	0
 936 00e0 02       		.uleb128 0x2
 937 00e1 18       		.uleb128 0x18
 938 00e2 9142     		.uleb128 0x2111
 939 00e4 18       		.uleb128 0x18
 940 00e5 00       		.byte	0
 941 00e6 00       		.byte	0
 942 00e7 0F       		.uleb128 0xf
 943 00e8 898201   		.uleb128 0x4109
 944 00eb 01       		.byte	0x1
 945 00ec 11       		.uleb128 0x11
 946 00ed 01       		.uleb128 0x1
 947 00ee 31       		.uleb128 0x31
 948 00ef 13       		.uleb128 0x13
 949 00f0 00       		.byte	0
 950 00f1 00       		.byte	0
 951 00f2 10       		.uleb128 0x10
 952 00f3 898201   		.uleb128 0x4109
 953 00f6 00       		.byte	0
 954 00f7 11       		.uleb128 0x11
 955 00f8 01       		.uleb128 0x1
 956 00f9 31       		.uleb128 0x31
 957 00fa 13       		.uleb128 0x13
 958 00fb 00       		.byte	0
 959 00fc 00       		.byte	0
 960 00fd 11       		.uleb128 0x11
 961 00fe 2E       		.uleb128 0x2e
 962 00ff 01       		.byte	0x1
 963 0100 3F       		.uleb128 0x3f
 964 0101 19       		.uleb128 0x19
 965 0102 03       		.uleb128 0x3
 966 0103 0E       		.uleb128 0xe
 967 0104 3A       		.uleb128 0x3a
 968 0105 0B       		.uleb128 0xb
 969 0106 3B       		.uleb128 0x3b
 970 0107 05       		.uleb128 0x5
 971 0108 27       		.uleb128 0x27
 972 0109 19       		.uleb128 0x19
 973 010a 49       		.uleb128 0x49
 974 010b 13       		.uleb128 0x13
 975 010c 11       		.uleb128 0x11
 976 010d 01       		.uleb128 0x1
 977 010e 12       		.uleb128 0x12
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 34


 978 010f 06       		.uleb128 0x6
 979 0110 40       		.uleb128 0x40
 980 0111 18       		.uleb128 0x18
 981 0112 9742     		.uleb128 0x2117
 982 0114 19       		.uleb128 0x19
 983 0115 01       		.uleb128 0x1
 984 0116 13       		.uleb128 0x13
 985 0117 00       		.byte	0
 986 0118 00       		.byte	0
 987 0119 12       		.uleb128 0x12
 988 011a 34       		.uleb128 0x34
 989 011b 00       		.byte	0
 990 011c 03       		.uleb128 0x3
 991 011d 0E       		.uleb128 0xe
 992 011e 3A       		.uleb128 0x3a
 993 011f 0B       		.uleb128 0xb
 994 0120 3B       		.uleb128 0x3b
 995 0121 05       		.uleb128 0x5
 996 0122 49       		.uleb128 0x49
 997 0123 13       		.uleb128 0x13
 998 0124 02       		.uleb128 0x2
 999 0125 18       		.uleb128 0x18
 1000 0126 00       		.byte	0
 1001 0127 00       		.byte	0
 1002 0128 13       		.uleb128 0x13
 1003 0129 34       		.uleb128 0x34
 1004 012a 00       		.byte	0
 1005 012b 03       		.uleb128 0x3
 1006 012c 0E       		.uleb128 0xe
 1007 012d 3A       		.uleb128 0x3a
 1008 012e 0B       		.uleb128 0xb
 1009 012f 3B       		.uleb128 0x3b
 1010 0130 0B       		.uleb128 0xb
 1011 0131 49       		.uleb128 0x49
 1012 0132 13       		.uleb128 0x13
 1013 0133 3F       		.uleb128 0x3f
 1014 0134 19       		.uleb128 0x19
 1015 0135 02       		.uleb128 0x2
 1016 0136 18       		.uleb128 0x18
 1017 0137 00       		.byte	0
 1018 0138 00       		.byte	0
 1019 0139 00       		.byte	0
 1020              		.section	.debug_loc,"",%progbits
 1021              	.Ldebug_loc0:
 1022              	.LLST0:
 1023 0000 0A000000 		.4byte	.LVL3
 1024 0004 0E000000 		.4byte	.LVL4
 1025 0008 0100     		.2byte	0x1
 1026 000a 53       		.byte	0x53
 1027 000b 00000000 		.4byte	0
 1028 000f 00000000 		.4byte	0
 1029              		.section	.debug_aranges,"",%progbits
 1030 0000 7C000000 		.4byte	0x7c
 1031 0004 0200     		.2byte	0x2
 1032 0006 00000000 		.4byte	.Ldebug_info0
 1033 000a 04       		.byte	0x4
 1034 000b 00       		.byte	0
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 35


 1035 000c 0000     		.2byte	0
 1036 000e 0000     		.2byte	0
 1037 0010 00000000 		.4byte	.LFB2
 1038 0014 10000000 		.4byte	.LFE2-.LFB2
 1039 0018 00000000 		.4byte	.LFB3
 1040 001c 10000000 		.4byte	.LFE3-.LFB3
 1041 0020 00000000 		.4byte	.LFB4
 1042 0024 0C000000 		.4byte	.LFE4-.LFB4
 1043 0028 00000000 		.4byte	.LFB5
 1044 002c 14000000 		.4byte	.LFE5-.LFB5
 1045 0030 00000000 		.4byte	.LFB6
 1046 0034 0C000000 		.4byte	.LFE6-.LFB6
 1047 0038 00000000 		.4byte	.LFB7
 1048 003c 0C000000 		.4byte	.LFE7-.LFB7
 1049 0040 00000000 		.4byte	.LFB1
 1050 0044 40000000 		.4byte	.LFE1-.LFB1
 1051 0048 00000000 		.4byte	.LFB0
 1052 004c 1C000000 		.4byte	.LFE0-.LFB0
 1053 0050 00000000 		.4byte	.LFB8
 1054 0054 0C000000 		.4byte	.LFE8-.LFB8
 1055 0058 00000000 		.4byte	.LFB9
 1056 005c 0C000000 		.4byte	.LFE9-.LFB9
 1057 0060 00000000 		.4byte	.LFB10
 1058 0064 0C000000 		.4byte	.LFE10-.LFB10
 1059 0068 00000000 		.4byte	.LFB11
 1060 006c 0C000000 		.4byte	.LFE11-.LFB11
 1061 0070 00000000 		.4byte	.LFB12
 1062 0074 0C000000 		.4byte	.LFE12-.LFB12
 1063 0078 00000000 		.4byte	0
 1064 007c 00000000 		.4byte	0
 1065              		.section	.debug_ranges,"",%progbits
 1066              	.Ldebug_ranges0:
 1067 0000 00000000 		.4byte	.LFB2
 1068 0004 10000000 		.4byte	.LFE2
 1069 0008 00000000 		.4byte	.LFB3
 1070 000c 10000000 		.4byte	.LFE3
 1071 0010 00000000 		.4byte	.LFB4
 1072 0014 0C000000 		.4byte	.LFE4
 1073 0018 00000000 		.4byte	.LFB5
 1074 001c 14000000 		.4byte	.LFE5
 1075 0020 00000000 		.4byte	.LFB6
 1076 0024 0C000000 		.4byte	.LFE6
 1077 0028 00000000 		.4byte	.LFB7
 1078 002c 0C000000 		.4byte	.LFE7
 1079 0030 00000000 		.4byte	.LFB1
 1080 0034 40000000 		.4byte	.LFE1
 1081 0038 00000000 		.4byte	.LFB0
 1082 003c 1C000000 		.4byte	.LFE0
 1083 0040 00000000 		.4byte	.LFB8
 1084 0044 0C000000 		.4byte	.LFE8
 1085 0048 00000000 		.4byte	.LFB9
 1086 004c 0C000000 		.4byte	.LFE9
 1087 0050 00000000 		.4byte	.LFB10
 1088 0054 0C000000 		.4byte	.LFE10
 1089 0058 00000000 		.4byte	.LFB11
 1090 005c 0C000000 		.4byte	.LFE11
 1091 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 36


 1092 0064 0C000000 		.4byte	.LFE12
 1093 0068 00000000 		.4byte	0
 1094 006c 00000000 		.4byte	0
 1095              		.section	.debug_line,"",%progbits
 1096              	.Ldebug_line0:
 1097 0000 3E010000 		.section	.debug_str,"MS",%progbits,1
 1097      02004700 
 1097      00000201 
 1097      FB0E0D00 
 1097      01010101 
 1098              	.LASF15:
 1099 0000 72656731 		.ascii	"reg16\000"
 1099      3600
 1100              	.LASF27:
 1101 0006 74726967 		.ascii	"triggerPWM_Start\000"
 1101      67657250 
 1101      574D5F53 
 1101      74617274 
 1101      00
 1102              	.LASF34:
 1103 0017 74726967 		.ascii	"triggerPWM_ReadCompare\000"
 1103      67657250 
 1103      574D5F52 
 1103      65616443 
 1103      6F6D7061 
 1104              	.LASF33:
 1105 002e 74726967 		.ascii	"triggerPWM_ReadCapture\000"
 1105      67657250 
 1105      574D5F52 
 1105      65616443 
 1105      61707475 
 1106              	.LASF23:
 1107 0045 70657269 		.ascii	"period\000"
 1107      6F6400
 1108              	.LASF3:
 1109 004c 73686F72 		.ascii	"short unsigned int\000"
 1109      7420756E 
 1109      7369676E 
 1109      65642069 
 1109      6E7400
 1110              	.LASF21:
 1111 005f 74726967 		.ascii	"triggerPWM_WritePeriod\000"
 1111      67657250 
 1111      574D5F57 
 1111      72697465 
 1111      50657269 
 1112              	.LASF24:
 1113 0076 74726967 		.ascii	"triggerPWM_WriteCompare\000"
 1113      67657250 
 1113      574D5F57 
 1113      72697465 
 1113      436F6D70 
 1114              	.LASF11:
 1115 008e 666C6F61 		.ascii	"float\000"
 1115      7400
 1116              	.LASF22:
 1117 0094 636F756E 		.ascii	"counter\000"
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 37


 1117      74657200 
 1118              	.LASF40:
 1119 009c 74726967 		.ascii	"triggerPWM_initVar\000"
 1119      67657250 
 1119      574D5F69 
 1119      6E697456 
 1119      617200
 1120              	.LASF30:
 1121 00af 74726967 		.ascii	"triggerPWM_WriteControlRegister\000"
 1121      67657250 
 1121      574D5F57 
 1121      72697465 
 1121      436F6E74 
 1122              	.LASF36:
 1123 00cf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1123      43313120 
 1123      352E342E 
 1123      31203230 
 1123      31363036 
 1124 0102 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1124      20726576 
 1124      6973696F 
 1124      6E203233 
 1124      37373135 
 1125 0135 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1125      66756E63 
 1125      74696F6E 
 1125      2D736563 
 1125      74696F6E 
 1126              	.LASF26:
 1127 015d 74726967 		.ascii	"triggerPWM_Init\000"
 1127      67657250 
 1127      574D5F49 
 1127      6E697400 
 1128              	.LASF5:
 1129 016d 6C6F6E67 		.ascii	"long unsigned int\000"
 1129      20756E73 
 1129      69676E65 
 1129      6420696E 
 1129      7400
 1130              	.LASF18:
 1131 017f 74726967 		.ascii	"triggerPWM_Enable\000"
 1131      67657250 
 1131      574D5F45 
 1131      6E61626C 
 1131      6500
 1132              	.LASF9:
 1133 0191 75696E74 		.ascii	"uint8\000"
 1133      3800
 1134              	.LASF31:
 1135 0197 636F6E74 		.ascii	"control\000"
 1135      726F6C00 
 1136              	.LASF1:
 1137 019f 756E7369 		.ascii	"unsigned char\000"
 1137      676E6564 
 1137      20636861 
 1137      7200
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 38


 1138              	.LASF37:
 1139 01ad 47656E65 		.ascii	"Generated_Source\\PSoC5\\triggerPWM.c\000"
 1139      72617465 
 1139      645F536F 
 1139      75726365 
 1139      5C50536F 
 1140              	.LASF12:
 1141 01d1 646F7562 		.ascii	"double\000"
 1141      6C6500
 1142              	.LASF10:
 1143 01d8 75696E74 		.ascii	"uint16\000"
 1143      313600
 1144              	.LASF8:
 1145 01df 756E7369 		.ascii	"unsigned int\000"
 1145      676E6564 
 1145      20696E74 
 1145      00
 1146              	.LASF32:
 1147 01ec 74726967 		.ascii	"triggerPWM_ReadCounter\000"
 1147      67657250 
 1147      574D5F52 
 1147      65616443 
 1147      6F756E74 
 1148              	.LASF20:
 1149 0203 74726967 		.ascii	"triggerPWM_WriteCounter\000"
 1149      67657250 
 1149      574D5F57 
 1149      72697465 
 1149      436F756E 
 1150              	.LASF7:
 1151 021b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1151      206C6F6E 
 1151      6720756E 
 1151      7369676E 
 1151      65642069 
 1152              	.LASF29:
 1153 0232 72657375 		.ascii	"result\000"
 1153      6C7400
 1154              	.LASF19:
 1155 0239 74726967 		.ascii	"triggerPWM_Stop\000"
 1155      67657250 
 1155      574D5F53 
 1155      746F7000 
 1156              	.LASF14:
 1157 0249 72656738 		.ascii	"reg8\000"
 1157      00
 1158              	.LASF17:
 1159 024e 73697A65 		.ascii	"sizetype\000"
 1159      74797065 
 1159      00
 1160              	.LASF39:
 1161 0257 74726967 		.ascii	"triggerPWM_ReadControlRegister\000"
 1161      67657250 
 1161      574D5F52 
 1161      65616443 
 1161      6F6E7472 
 1162              	.LASF6:
ARM GAS  C:\Users\LUCASI~1\AppData\Local\Temp\ccsuu2qe.s 			page 39


 1163 0276 6C6F6E67 		.ascii	"long long int\000"
 1163      206C6F6E 
 1163      6720696E 
 1163      7400
 1164              	.LASF13:
 1165 0284 63686172 		.ascii	"char\000"
 1165      00
 1166              	.LASF2:
 1167 0289 73686F72 		.ascii	"short int\000"
 1167      7420696E 
 1167      7400
 1168              	.LASF28:
 1169 0293 6374726C 		.ascii	"ctrl\000"
 1169      00
 1170              	.LASF35:
 1171 0298 74726967 		.ascii	"triggerPWM_ReadPeriod\000"
 1171      67657250 
 1171      574D5F52 
 1171      65616450 
 1171      6572696F 
 1172              	.LASF4:
 1173 02ae 6C6F6E67 		.ascii	"long int\000"
 1173      20696E74 
 1173      00
 1174              	.LASF16:
 1175 02b7 6C6F6E67 		.ascii	"long double\000"
 1175      20646F75 
 1175      626C6500 
 1176              	.LASF38:
 1177 02c3 433A5C55 		.ascii	"C:\\Users\\lucasiversen\\Desktop\\PSOC_1_Program\\P"
 1177      73657273 
 1177      5C6C7563 
 1177      61736976 
 1177      65727365 
 1178 02f1 534F435F 		.ascii	"SOC_1_Program\\NeoPixel.cydsn\000"
 1178      315F5072 
 1178      6F677261 
 1178      6D5C4E65 
 1178      6F506978 
 1179              	.LASF0:
 1180 030e 7369676E 		.ascii	"signed char\000"
 1180      65642063 
 1180      68617200 
 1181              	.LASF25:
 1182 031a 636F6D70 		.ascii	"compare\000"
 1182      61726500 
 1183              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
